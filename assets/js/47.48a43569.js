(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{499:function(v,_,t){"use strict";t.r(_);var a=t(21),s=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("p",[t("strong",[v._v("高并发系统的演进应该是循序渐进，以解决系统中存在的问题为目的和驱动力的。")])]),v._v(" "),t("p",[v._v("系统的演进过程应该遵循下面的思路：")]),v._v(" "),t("ul",[t("li",[v._v("最简单的系统设计满足业务需求和流量现状，选择最熟悉的技术体系。")]),v._v(" "),t("li",[v._v("随着流量的增加和业务的变化，修正架构中存在问题的点，如单点问题，横向扩展问题，性能无法满足需求的组件。在这个过程中，选择社区成熟的、团队熟悉的组件帮助我们解决问题，在社区没有合适解决方案的前提下才会自己造轮子。")]),v._v(" "),t("li",[v._v("当对架构的小修小补无法满足需求时，考虑重构、重写等大的调整方式以解决现有的问题。")])]),v._v(" "),t("p",[v._v("高并发系统：它的通用设计方法")]),v._v(" "),t("p",[v._v("归纳起来共有三种方法。")]),v._v(" "),t("ul",[t("li",[v._v("Scale-out（横向扩展）：分而治之是一种常见的高并发系统设计方法，采用分布式部署的方式把流量分流开，让每个服务器都承担一部分并发和流量。")]),v._v(" "),t("li",[v._v("缓存：使用缓存来提高系统的性能，就好比用“拓宽河道”的方式抵抗高并发大流量的冲击。")]),v._v(" "),t("li",[v._v("异步：在某些场景下，未处理完成之前，我们可以让请求先返回，在数据准备好之后再通知请求方，这样可以在单位时间内处理更多的请求。")])]),v._v(" "),t("h2",{attrs:{id:"什么是分层架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是分层架构"}},[v._v("#")]),v._v(" 什么是分层架构")]),v._v(" "),t("p",[v._v("软件架构分层在软件工程中是一种常见的设计方式，它是将整体系统拆分成 N 个层次，每个层次有独立的职责，多个层次协同提供完整的功能。")]),v._v(" "),t("h2",{attrs:{id:"高并发系统设计的三大目标-高性能、高可用、可扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高并发系统设计的三大目标-高性能、高可用、可扩展"}},[v._v("#")]),v._v(" 高并发系统设计的三大目标：高性能、高可用、可扩展")]),v._v(" "),t("h2",{attrs:{id:"性能优化原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能优化原则"}},[v._v("#")]),v._v(" 性能优化原则")]),v._v(" "),t("p",[v._v("**首先，性能优化一定不能盲目，一定是问题导向的。**脱离了问题，盲目地提早优化会增加系统的复杂度，浪费开发人员的时间，也因为某些优化可能会对业务上有些折中的考虑，所以也会损伤业务。")]),v._v(" "),t("p",[v._v("**其次，性能优化也遵循“八二原则”，**即你可以用 20% 的精力解决 80% 的性能问题。所以我们在优化过程中一定要抓住主要矛盾，优先优化主要的性能瓶颈点。")]),v._v(" "),t("p",[v._v("**再次，性能优化也要有数据支撑。**在优化过程中，你要时刻了解你的优化让响应时间减少了多少，提升了多少的吞吐量。")]),v._v(" "),t("p",[v._v("**最后，性能优化的过程是持续的。**高并发的系统通常是业务逻辑相对复杂的系统，那么在这类系统中出现的性能问题通常也会有多方面的原因。因此，我们在做性能优化的时候要明确目标，比方说，支撑每秒 1 万次请求的吞吐量下响应时间在 10ms，那么我们就需要持续不断地寻找性能瓶颈，制定优化方案，直到达到目标为止。")]),v._v(" "),t("h2",{attrs:{id:"性能的度量指标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能的度量指标"}},[v._v("#")]),v._v(" 性能的度量指标")]),v._v(" "),t("ul",[t("li",[v._v("平均值")]),v._v(" "),t("li",[v._v("最大值")]),v._v(" "),t("li",[v._v("分位值")])]),v._v(" "),t("p",[t("strong",[v._v("1. 提高系统的处理核心数")])]),v._v(" "),t("p",[t("strong",[v._v("2. 减少单次任务响应时间")])])])}),[],!1,null,null,null);_.default=s.exports}}]);