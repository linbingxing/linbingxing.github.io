(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{535:function(a,t,v){"use strict";v.r(t);var r=v(21),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"java-基础-反射机制详解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-基础-反射机制详解"}},[a._v("#")]),a._v(" Java 基础 - 反射机制详解")]),a._v(" "),v("h2",{attrs:{id:"动态语言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#动态语言"}},[a._v("#")]),a._v(" 动态语言")]),a._v(" "),v("p",[a._v("动态语言，是指程序在运行时可以改变其结构：新的函数可以引进，已有的函数可以被删除等结构上的变化。比如常见的 JavaScript 就是动态语言，除此之外 Ruby,Python 等也属于动态语言，而 C、 C++则不属于动态语言。 从反射角度说 JAVA 属于半动态语言。")]),a._v(" "),v("h2",{attrs:{id:"反射机制概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#反射机制概念"}},[a._v("#")]),a._v(" 反射机制概念")]),a._v(" "),v("p",[a._v("在 Java 中的反射机制是指在运行状态中，对于任意一个类都能够知道这个类所有的属性和方法；并且对于任意一个对象，都能够调用它的任意一个方法；这种动态获取信息以及动态调用对象方法的功能成为 Java 语言的反射机制。")]),a._v(" "),v("p",[a._v("利用 Java 的反射机制，可以做到以下：")]),a._v(" "),v("ul",[v("li",[a._v("在程序的运行态可以获取对象所属的类；")]),a._v(" "),v("li",[a._v("在程序的运行态可以构造类的对象实例；")]),a._v(" "),v("li",[a._v("在程序的运行时可以获取，或者修改类的成员属性；")]),a._v(" "),v("li",[a._v("在程序的运行态可以调用某个类，或者对象的方法；")]),a._v(" "),v("li",[a._v("在程序的运行态可以获取类的其他信息，比如描述修饰符、父类信息等；")])])])}),[],!1,null,null,null);t.default=s.exports}}]);